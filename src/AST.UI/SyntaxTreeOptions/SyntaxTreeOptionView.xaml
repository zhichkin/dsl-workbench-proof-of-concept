<UserControl x:Class="OneCSharp.AST.UI.SyntaxTreeOptionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ui="clr-namespace:OneCSharp.AST.UI"
             mc:Ignorable="d" d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <Storyboard x:Key="HideOptionAnimation" x:Shared="False" Completed="HideOptionAnimation_Completed">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:5" FillBehavior="Stop"/>
        </Storyboard>

        <Style x:Key="OptionStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="Blue"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Style.Triggers>
                
                <MultiDataTrigger>
                    
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsVisble}" Value="True"/>
                        <Condition Binding="{Binding IsTemporallyVisible}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    
                    <MultiDataTrigger.Setters>
                        <Setter Property="Foreground" Value="Gray"/>
                    </MultiDataTrigger.Setters>
                    
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard x:Name="HideOptionStoryboard" Storyboard="{StaticResource HideOptionAnimation}"/>
                    </MultiDataTrigger.EnterActions>
                    
                    <MultiDataTrigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="HideOptionStoryboard"/>
                    </MultiDataTrigger.ExitActions>
                    
                </MultiDataTrigger>

                <!--<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>-->
                
                <DataTrigger Binding="{Binding ResetHideOptionsAnimation}" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                    <DataTrigger.EnterActions>
                        <SeekStoryboard BeginStoryboardName="HideOptionStoryboard" Origin="BeginTime" Offset="0:0:0"/>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                
                <DataTrigger Binding="{Binding StopHideOptionsAnimation}" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                    <DataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="HideOptionStoryboard"/>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                
            </Style.Triggers>
            
        </Style>

        

    </UserControl.Resources>

    <TextBlock x:Name="CONTROL_ROOT" Text="{Binding Title}" Style="{StaticResource OptionStyle}"
               Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
               ui:SyntaxTreeOptionBehavior.IsTemporallyVisible="True">
        
            <!--<behaviors:Interaction.Triggers>
                <behaviors:EventTrigger EventName="KeyDown" SourceObject="{Binding ElementName=CONTROL_ROOT}">
                    <behaviors:InvokeCommandAction Command="{Binding KeyDownCommand}" PassEventArgsToCommand="True"/>
                </behaviors:EventTrigger>
                <behaviors:EventTrigger EventName="MouseLeftButtonDown" SourceObject="{Binding ElementName=CONTROL_ROOT}">
                    <behaviors:InvokeCommandAction Command="{Binding MouseDownCommand}" PassEventArgsToCommand="True"/>
                </behaviors:EventTrigger>
                <behaviors:EventTrigger EventName="MouseRightButtonDown" SourceObject="{Binding ElementName=CONTROL_ROOT}">
                    <behaviors:InvokeCommandAction Command="{Binding MouseDownCommand}" PassEventArgsToCommand="True"/>
                </behaviors:EventTrigger>
                <behaviors:EventTrigger EventName="MouseEnter" SourceObject="{Binding ElementName=CONTROL_ROOT}">
                    <behaviors:InvokeCommandAction Command="{Binding MouseEnterCommand}" PassEventArgsToCommand="True"/>
                </behaviors:EventTrigger>
                <behaviors:EventTrigger EventName="MouseLeave" SourceObject="{Binding ElementName=CONTROL_ROOT}">
                    <behaviors:InvokeCommandAction Command="{Binding MouseLeaveCommand}" PassEventArgsToCommand="True"/>
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>-->

    </TextBlock>

</UserControl>