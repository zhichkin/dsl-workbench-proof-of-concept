<TextBlock x:Class="OneCSharp.AST.UI.Keyword"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:mvvm="clr-namespace:OneCSharp.MVVM;assembly=OneCSharp.MVVM"
           xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           mc:Ignorable="d" d:DesignHeight="450" d:DesignWidth="800">

    <TextBlock.Resources>
        
        <Style x:Key="SyntaxNodeBorderStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="White"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver}" Value="True">
                    <Setter Property="BorderBrush" Value="Black"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="KeywordStyle" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="Foreground" Value="Blue"/>
            </Style.Setters>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsFocused}" Value="True">
                    <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=CONTROL_ROOT}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
    </TextBlock.Resources>

    <Border BorderThickness="1" Cursor="Hand" Style="{StaticResource SyntaxNodeBorderStyle}">
        
        <TextBlock x:Name="CONTROL_ROOT" Text="{Binding Keyword}" Focusable="True" Style="{StaticResource KeywordStyle}" Margin="1">

            <TextBlock.ContextMenu>
                <mvvm:ContextMenuView ItemsSource="{Binding ContextMenu}"/>
            </TextBlock.ContextMenu>
            
            <TextBlock.InputBindings>
                <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CtrlCCommand}"/>
                <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding CtrlVCommand}"/>
            </TextBlock.InputBindings>
            
            <behaviors:Interaction.Triggers>
                <behaviors:EventTrigger EventName="KeyDown" SourceObject="{Binding ElementName=CONTROL_ROOT}">
                    <behaviors:InvokeCommandAction Command="{Binding KeyDownCommand}" PassEventArgsToCommand="True"/>
                </behaviors:EventTrigger>
                <behaviors:EventTrigger EventName="MouseLeftButtonDown" SourceObject="{Binding ElementName=CONTROL_ROOT}">
                    <behaviors:InvokeCommandAction Command="{Binding MouseDownCommand}"/>
                </behaviors:EventTrigger>
                <behaviors:EventTrigger EventName="MouseRightButtonDown" SourceObject="{Binding ElementName=CONTROL_ROOT}">
                    <behaviors:InvokeCommandAction Command="{Binding MouseDownCommand}"/>
                </behaviors:EventTrigger>
                <behaviors:EventTrigger EventName="MouseEnter" SourceObject="{Binding ElementName=CONTROL_ROOT}">
                    <behaviors:InvokeCommandAction Command="{Binding MouseEnterCommand}"/>
                </behaviors:EventTrigger>
                <behaviors:EventTrigger EventName="MouseLeave" SourceObject="{Binding ElementName=CONTROL_ROOT}">
                    <behaviors:InvokeCommandAction Command="{Binding MouseLeaveCommand}"/>
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>
            
        </TextBlock>
    
    </Border>
    
</TextBlock>